{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./struct/html.js","./struct/helper/helperfunc.js","./struct/store.js","./struct/accounts.js","./struct/modal.js","./struct/controller/register.js","./struct/ui.js","./struct/controller/login.js","./struct/controller/transfer.js","./struct/controller/logout.js","./struct/user.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","export class Html{\r\n    //export test = 'Just testing';\r\n    containerApp = document.querySelector('.app');\r\n    containerMovements = document.querySelector('.movements');\r\n\r\n    btnLogin = document.querySelector('.login__btn');\r\n    btnTransfer = document.querySelector('.form__btn--transfer');\r\n    btnLoan = document.querySelector('.form__btn--loan');\r\n    btnClose = document.querySelector('.form__btn--close');\r\n    btnSort = document.querySelector('.btn--sort');\r\n    btnLoginOpenModal = document.querySelector('.open_login-modal');\r\n    btnSignupOpenModal = document.querySelector('.open_signup-modal');\r\n    btnLogOut = document.querySelector('.logout');\r\n\r\n    inputLoginUsername = document.querySelector('.login__input--user');\r\n    inputLoginPin = document.querySelector('.login__input--pin');\r\n    inputTransferTo = document.querySelector('.form__input--to');\r\n    inputTransferAmount = document.querySelector('.form__input--amount');\r\n\r\n    inputLoanAmount = document.querySelector('.form__input--loan-amount');\r\n    inputCloseUsername = document.querySelector('.form__input--user');\r\n    inputClosePin = document.querySelector('.form__input--pin');\r\n\r\n    labelWelcome = document.querySelector('.welcome');\r\n    labelBVN = document.querySelector('.bvn_label');\r\n    labelACC = document.querySelector('.acc_label');\r\n    labelAccType = document.querySelector('.acc-type_label');\r\n\r\n    // Elements\r\n    labelBalance = document.querySelector('.balance__value');\r\n    labelSumIn = document.querySelector('.summary__value--in');\r\n    labelSumOut = document.querySelector('.summary__value--out');\r\n    labelSumInterest = document.querySelector('.summary__value--interest');\r\n    labelTimer = document.querySelector('.timer');\r\n    labelDate = document.querySelector('.date');\r\n\r\n    loginModal = document.querySelector('.login_modal');\r\n    signupModal = document.querySelector('.signup_modal');\r\n    overlay = document.querySelector('.overlay');\r\n    loginCloseModal = document.querySelector('.login_btn--close-modal');\r\n    signupCloseModal = document.querySelector('.signup_btn--close-modal');\r\n\r\n    //BTNs\r\n    btnLoginOpenModal = document.querySelector('.open_login-modal');\r\n    btnSignupOpenModal = document.querySelector('.open_signup-modal');//Duplicate\r\n    btnRegister = document.querySelector('.register_button'); //'.register_form'\r\n\r\n    // input fields\r\n    fullNameField = document.querySelector('.fullname');\r\n    mobileField = document.querySelector('.mobile');\r\n    userNameField = document.querySelector('.user_name');\r\n    amountField = document.querySelector('.amount');\r\n    passwordField = document.querySelector('.password');\r\n    bvnField = document.querySelector('.bvn');\r\n    accountTypeField = document.querySelector('#account_type');\r\n    idTypeField = document.querySelector('.id_type');\r\n    idNumberField = document.querySelector('.id_number');\r\n\r\n    // Others\r\n    labelBVN = document.querySelector('.bvn_labell');\r\n    idTypeSpan = document.querySelector('.id_type-span');\r\n    idNumberSpan = document.querySelector('.id_number-span');\r\n};","/*\r\n All helper function use in the system will reside here\r\n*/\r\nimport {Html} from '../html';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst html = new Html;\r\n\r\nexport class Helper{\r\n    // Private Variables\r\n    constructor(){\r\n      this.calcDate();\r\n    }\r\n    _calcInterest() {\r\n        let intRate = Date.now();\r\n        let newrate =\r\n          Number(intRate.toString().split('').slice(11, 14).join('')) / 10;\r\n        \r\n        return newrate;\r\n    }\r\n    \r\n    _generateBVN() {\r\n        let newDate = Date.now();\r\n        let newBVN = Number(newDate.toString().split('').slice(3, 14).join(''));\r\n        return newBVN;\r\n    }\r\n    \r\n    _generateAccountNumber() {\r\n        return this._generateBVN() - 1111000000;\r\n    }\r\n    \r\n    timeStamp() {\r\n        const time = Date.now();\r\n        let date = new Date(time);\r\n    \r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        const year = date.getFullYear();\r\n    \r\n        let hour;\r\n    \r\n        if (date.getHours() === 12) {\r\n          hour = date.getHours() + 1;\r\n        } else {\r\n          date.getHours() > 12\r\n            ? (hour = date.getHours() - 12)\r\n            : (hour = date.getHours());\r\n        }\r\n        const minute = date.getMinutes();\r\n        let seconds;\r\n        String(date.getSeconds()).length > 1\r\n          ? (seconds = date.getSeconds())\r\n          : (seconds = `0${date.getSeconds()}`);\r\n    \r\n        return `${day}/${month}/${year}      ${hour}:${minute}:${seconds}`;\r\n    }\r\n\r\n    checkMinimumAmount(accType,type,minAmount){\r\n\r\n        if (type === accType && Number(html.amountField.value) !== minAmount) {\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: `Minimum amount for Tier ${type} is ${minAmount}`,\r\n            icon: 'error',\r\n          });\r\n          return;\r\n        }\r\n    };\r\n\r\n    suggestBVN(){\r\n      html.bvnField.addEventListener('focus', e => {\r\n        e.target.value = this._generateBVN();\r\n      });\r\n    }\r\n\r\n    // Hide BVN field for Tier One & Display identity fields for Tier three\r\n    setAccountType(){\r\n      html.accountTypeField.addEventListener('change', function(e) {\r\n        let accountType = e.target.value;\r\n    \r\n          // Hide bvn field if Account type is Tier One\r\n          if (accountType === \"Tier One\") {\r\n            html.bvnField.value = '';\r\n            html.bvnField.style.display = 'none';\r\n            html.labelBVN.style.display = 'none';\r\n          } else{\r\n            html.bvnField.style.display = 'block';\r\n            html.labelBVN.style.display = 'block';\r\n          }\r\n    \r\n          // Display identity fields if account type is Tier three\r\n          if (accountType === \"Tier Three\") {\r\n            html.idTypeSpan.classList.remove('display_none');\r\n            html.idNumberSpan.classList.remove('display_none');\r\n          } else {\r\n            html.idTypeSpan.classList.add('display_none');\r\n            html.idNumberSpan.classList.add('display_none');\r\n          }\r\n      });\r\n    }\r\n\r\n    setTier3ID(accType,idtype,idNo){\r\n        if (accType === \"Tier Three\") {\r\n            idtype = html.idTypeField.value;\r\n            idNo = html.idNumberField.value;\r\n        }\r\n    }\r\n\r\n    clearInputFields(){\r\n        // Clear input fields\r\n        html.fullNameField.value =\r\n        html.mobileField.value =\r\n        html.userNameField.value =\r\n        html.amountField.value =\r\n        html.passwordField.value =\r\n        html.bvnField.value ='';\r\n    }\r\n\r\n    calcDate() {\r\n      const date = new Date();\r\n      const day = date.getDate();\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n  \r\n      //return `${day}/${month}/${year}`;\r\n  \r\n      let todayDate = `${day}/${month}/${year}`;\r\n      html.labelDate.textContent = todayDate;\r\n    }\r\n\r\n    generateOTP() {\r\n      let otp = Date.now();\r\n      otp = String(otp).split('').slice(8, 13).join('');\r\n      return otp;\r\n    }\r\n}","export default class Store{\r\n  \r\n    currentUser;\r\n    alluser = JSON.parse(localStorage.getItem('UserData'))||[];\r\n\r\n    saveUser(user){\r\n      this.alluser.push(user);\r\n      localStorage.setItem('UserData', JSON.stringify(this.alluser));\r\n    }\r\n\r\n    saveAllUsers(users){\r\n      localStorage.setItem('UserData', JSON.stringify(users))\r\n    }\r\n\r\n    getAllUsers(){\r\n      return JSON.parse(localStorage.getItem('UserData')) || [];\r\n    }\r\n\r\n    getCurrentUser(allUsers,userName){\r\n    \r\n      this.currentUser = allUsers.find(user =>{\r\n        return user.userName === userName;\r\n      })\r\n      return this.currentUser;\r\n    }\r\n    \r\n\r\n};","class Account{\r\n\r\n    constructor(accNumber,accBalance,movementsDate){\r\n      this.accNumber = accNumber;\r\n      this.accBalance = accBalance;\r\n      this.movementsDate = movementsDate;\r\n    }\r\n  \r\n};\r\n  \r\nexport class Maintier extends Account{\r\n  \r\n    constructor(accNumber,accBalance,movementsDate,accType,accInterest,minAmount,maxAmount){\r\n        super(accNumber,accBalance,movementsDate);\r\n        this.accType = accType;\r\n        this.accInterest = accInterest;\r\n        this.minAmount = minAmount;\r\n        this.maxAmount = maxAmount;\r\n        this.mov = [accBalance];\r\n    }\r\n  \r\n};\r\n  \r\nexport class Tier3 extends Maintier{\r\n  \r\n    constructor(accNumber,accBalance,movementsDate,accType,accInterest,minAmount,maxAmount, idenType, idenNumber){\r\n      super(accNumber,accBalance,movementsDate,accType,accInterest,minAmount,maxAmount);\r\n      this.idenType = idenType;\r\n      this.idenNumber = idenNumber;\r\n    }\r\n  \r\n};","import {Html} from './html';\r\nconst html = new Html;\r\n\r\nclass Modal {\r\n\r\n  constructor(btnSignupOpenModal, btnLoginOpenModal) {\r\n\r\n    // Set Paramenter to Open Modal\r\n    this.btnSignupOpenModal = btnSignupOpenModal;\r\n    this.btnLoginOpenModal = btnLoginOpenModal;\r\n\r\n    this._openModal(this.btnLoginOpenModal, html.loginModal);\r\n    this._openModal(this.btnSignupOpenModal, html.signupModal);\r\n    this._closeModal(html.loginCloseModal, html.loginModal);\r\n    this._closeModal(html.signupCloseModal, html.signupModal);\r\n  }\r\n\r\n  //This method will show modal on button click\r\n  showModal(modal = html.loginModal){\r\n    modal.classList.remove('hidden');\r\n    html.overlay.classList.remove('hidden');\r\n  }\r\n\r\n  // This method invoke showModal method but it's a private method\r\n  _openModal(btn =html.btnLoginOpenModal, modal) {\r\n    btn.addEventListener('click', () => {\r\n      this.showModal(modal);\r\n    });\r\n  }\r\n\r\n  // Method to hide modal.\r\n  hideModal(modal =html.loginModal) {\r\n    modal.classList.add('hidden');\r\n    html.overlay.classList.add('hidden');\r\n  }\r\n\r\n  _closeModal(btn, modal) {\r\n    // Add event listener to the btn passed in\r\n    btn.addEventListener('click', () => {\r\n      this.hideModal(modal);\r\n    });\r\n\r\n    // Add evebt listener to overlay to close modal\r\n    html.overlay.addEventListener('click', () => {\r\n      this.hideModal(modal);\r\n    });\r\n  }\r\n  \r\n}\r\n\r\nexport { Modal };","import {Html} from \"../html.js\";\r\nimport { Helper } from \"../helper/helperfunc.js\";\r\nimport Store from '../store.js';\r\nimport {Modal} from '../modal.js';\r\nimport Swal from \"sweetalert2\";\r\nimport { User} from \"../user.js\";\r\n\r\nlet store = new Store();\r\nconst helperFunc = new Helper();\r\nconst html = new Html;\r\nlet allUsers = store.getAllUsers();\r\nconst modal = new Modal(html.btnSignupOpenModal,html.btnLoginOpenModal);\r\n\r\nlet accountType = {\r\n    tier1 : \"Tier One\",\r\n    tier2 : \"Tier Two\",\r\n    tier3 : \"Tier Three\",\r\n}\r\nlet accType;\r\nhtml.accountTypeField.addEventListener('change', (e) => accType = e.target.value );\r\n\r\nexport function register(e){\r\n    e.preventDefault();\r\n    let userNameExist;\r\n\r\n    // Get the value for all input fields\r\n    let userFullName = html.fullNameField.value;\r\n    let userMobile = html.mobileField.value;\r\n    let userName = html.userNameField.value;\r\n    let amount = Number(html.amountField.value); //Value Converted to number;;\r\n    let userPin = html.passwordField.value;\r\n    let accNumber = helperFunc._generateAccountNumber();\r\n    let bvn, idenType, idenNumber, minAmount,maxAmount;\r\n    let movementsDate = [helperFunc.timeStamp()]\r\n\r\n    let accInterest = helperFunc._calcInterest();\r\n\r\n    const required =\r\n        userFullName !== '' &&\r\n        userMobile !== '' &&\r\n        userName !== '' &&\r\n        amount !== '' &&\r\n        userPin !== '';\r\n\r\n    // No BVN for Tier One acount\r\n    accType === accountType\r\n    .tier1  ? (bvn = undefined) : (bvn = html.bvnField.value);\r\n\r\n    // Set identity type and number for Tier Three\r\n    if (accType === \"Tier Three\") {\r\n      idenType = html.idTypeField.value;\r\n      idenNumber = html.idNumberField.value;\r\n    }\r\n\r\n    // set minimum and maximum amount for each account type\r\n    if(accType === accountType.tier1){\r\n      maxAmount = 500000;\r\n      minAmount = 1000;\r\n    }\r\n\r\n    if(accType === accountType.tier2){\r\n      maxAmount = 2000000;\r\n      minAmount = 5000;\r\n    }\r\n\r\n    if(accType === accountType.tier3){\r\n      maxAmount = 5000000;\r\n      minAmount = 20000;\r\n    }\r\n\r\n    const authUser = ()=>{\r\n\r\n      let tier1Range = Number(html.amountField.value) >= 1000 && \r\n      Number(html.amountField.value) <= 500000;\r\n\r\n      if (accType === \"Tier One\" && !tier1Range) {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: `Amount for Tier One is between 1,000 - 500,000`,\r\n          icon: 'error',\r\n        });\r\n        return;\r\n      }\r\n\r\n      let tier2Range = Number(html.amountField.value) >= 5000 && \r\n      Number(html.amountField.value) <= 2000000;\r\n\r\n      if (accType === \"Tier Two\" && !tier2Range) {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: `Amount for Tier Two is between 5,000 - 2,000,000`,\r\n          icon: 'error',\r\n        });\r\n        return;\r\n      }\r\n\r\n      let tier3Range = Number(html.amountField.value) >= 20000 && \r\n      Number(html.amountField.value) <= 5000000;\r\n      if (accType === \"Tier Three\" && !tier3Range) {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: `Amount for Tier Three is between 20,000 - 5,000,000`,\r\n          icon: 'error',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // create a new user\r\n      const user = new User(userFullName,userName,userPin,userMobile,bvn);\r\n      \r\n      //  Create new account for user;\r\n        user.createAcc(accNumber,amount,movementsDate,accType,accInterest,minAmount,maxAmount,idenType,idenNumber);\r\n\r\n      //  Add user info to the store\r\n        store.saveUser(user);\r\n\r\n      // Clear input fields\r\n        helperFunc.clearInputFields();\r\n\r\n        modal.hideModal(html.signupModal);\r\n\r\n        // After Successful Registration, Load Login Modal Automatically.\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: 'Registration Successful, Kindly Login',\r\n          icon: 'success',\r\n        }).then(fulfilled => {\r\n          if (fulfilled) {\r\n            // Reload Page for login to take effect.\r\n            location.reload();\r\n          }\r\n        });\r\n    }\r\n\r\n      // If there is registered user then check if the userName user try to register does not exist.\r\n      if (allUsers.length > 0) {\r\n        userNameExist = allUsers\r\n          .map(acc => acc.userName)\r\n          .some(user => user === html.userNameField.value);\r\n      }\r\n\r\n      if (userNameExist) {\r\n        // if yes Alart Error\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'Username Alredy exist!',\r\n          icon: 'error',\r\n        });\r\n      } else {\r\n        // Check if amount match the minimum amount for each account type.\r\n        // Check if no user at all or all field are filled\r\n        if ((allUsers.length === 0 && required) || required) {\r\n          authUser();\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'All fields are require',\r\n            icon: 'error',\r\n          });\r\n        }\r\n      }\r\n}","import { Html } from \"./html.js\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Modal} from './modal.js';\r\n\r\n\r\nlet html = new Html;\r\nlet modal = new Modal(html.btnSignupOpenModal,html.btnLoginOpenModal);\r\n\r\nexport default class UI {\r\n\r\n    // method to display Logout button after user login\r\n    disPlayLogoutBtn() {\r\n        html.btnLoginOpenModal.classList.add('hidden');\r\n        html.btnSignupOpenModal.classList.add('hidden');\r\n        html.btnLogOut.classList.remove('hidden');\r\n    };\r\n\r\n    logUserInfo(user){\r\n        // Make UI visible\r\n        html.containerApp.style.opacity = 1;\r\n        // Display welome message\r\n        // let fName = user.owner.split(' ')[0]\r\n        html.labelWelcome.textContent = `Welcome here ${user.userFullName}`;\r\n        html.labelWelcome.classList.add('highlight');\r\n        // Setting User BVN\r\n        // labelBVN.textContent = `BVN : ${user.bvn}`;\r\n        // labelBVN.classList.remove('hidden');\r\n\r\n        // Setting User ACC\r\n        let aza = user.acc.map(accT => accT.accNumber);\r\n        html.labelACC.textContent = ` ACC: ${aza[0]}`;\r\n        html.labelACC.classList.remove('hidden');\r\n        html.labelACC.style.paddingLeft = '15px';\r\n\r\n        // Setting User Account Type\r\n        let accType = user.acc.map(accT => accT.accType);\r\n        html.labelAccType.textContent = `Type: ${accType[0]}`;\r\n        html.labelAccType.classList.remove('hidden');\r\n        html.labelAccType.style.paddingLeft = '10px';\r\n\r\n        // Clear input field and let it loose focus\r\n        html.inputLoginUsername.value = '';\r\n        html.inputLoginPin.value = '';\r\n        html.inputLoginPin.blur;\r\n\r\n        // Close Modal\r\n        modal.hideModal();\r\n        this.disPlayLogoutBtn();\r\n    };\r\n\r\n    appendMovement(user, sorted = false) {\r\n      html.containerMovements.innerHTML = '';\r\n\r\n      let movements = user.acc.map(accT => accT.mov);\r\n      let movemenetDate = user.acc.map(accT => accT.movementsDate);\r\n      const movs = sorted ? movements[0].sort((a,d) => d-a) : movements[0];\r\n\r\n      //let dateTime = this.timeStamp();\r\n      let movRow;\r\n\r\n      movs.map((mov, index) =>{\r\n        // Create Html element to insert the movements to\r\n        const type = mov > 0 ? 'credit' : 'debit';\r\n        let currentDate = movemenetDate[0][index];\r\n\r\n        // Create all elements with javascript\r\n        movRow = document.createElement('div');\r\n        movRow.classList.add('movements__row');\r\n  \r\n        const movType = document.createElement('div');\r\n        movType.classList.add(`movements__type`, `movements__type--${type}`);\r\n        movType.textContent = `${index + 1} ${type}`;\r\n  \r\n        let movDate = document.createElement('div');\r\n        movDate.classList.add('movements__date');\r\n        movDate.textContent = `${currentDate}`;\r\n  \r\n        const movValue = document.createElement('div');\r\n        movValue.classList.add('movements__value');\r\n        movValue.textContent = `${mov}€`;\r\n  \r\n        // Append them inside each other\r\n        movRow.appendChild(movType);\r\n        movRow.appendChild(movDate);\r\n        movRow.appendChild(movValue);\r\n  \r\n        // Append movRow to parent container\r\n        html.containerMovements.insertAdjacentElement('afterbegin', movRow);\r\n      });\r\n    }\r\n    \r\n    balance(user) {\r\n      let move = user.acc.map(accT => accT.mov);\r\n\r\n      move[0].accBalance = move[0].reduce((acc,cur)=>{\r\n          return acc + cur;\r\n      },0)\r\n\r\n      html.labelBalance.textContent = `${move[0].accBalance}€`;\r\n    }\r\n\r\n    calcSumary(user) {\r\n      let movements = user.acc.map(accT => accT.mov);\r\n      let accInterests = user.acc.map(accT => accT.accInterest);\r\n\r\n      const income = movements\r\n        .filter(mov => mov > 0)\r\n        .reduce((acc, cur) => acc + cur, 0);\r\n      html.labelSumIn.textContent = `${income}€`;\r\n\r\n      const outcome = movements\r\n        .filter(mov => mov < 0)\r\n        .reduce((acc, cur) => acc + cur, 0);\r\n      html.labelSumOut.textContent = `${Math.abs(outcome)}€`;\r\n      \r\n      const interest = movements\r\n        .filter(mov => mov > 0)\r\n        .map(int => (int * accInterests[0]) / 100)\r\n        .filter(int => int >= 1)\r\n        .reduce((acc, cur) => acc + cur, 0);\r\n      html.labelSumInterest.textContent = `${interest.toFixed(1)}€`;\r\n    }\r\n\r\n    // Update Ui\r\n    updateUI(user){\r\n      // Calculate CurrentUser Movements\r\n      this.appendMovement(user);\r\n      //appendMovement(user.movements);\r\n\r\n      // Calculate user Ballance\r\n      this.balance(user);\r\n\r\n      // Calculate user Summary\r\n      this.calcSumary(user);\r\n    }\r\n\r\n    calcDate() {\r\n      const date = new Date();\r\n      const day = date.getDate();\r\n      const month = date.getMonth() + 1;\r\n      const year = date.getFullYear();\r\n\r\n      //return `${day}/${month}/${year}`;\r\n\r\n      let todayDate = `${day}/${month}/${year}`;\r\n      labelDate.textContent = todayDate;\r\n    }\r\n\r\n  // For SweetAlert Toast\r\n  toast(icon, msg) {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: 'top-end',\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: toast => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer);\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: icon,\r\n      title: msg,\r\n    });\r\n  }\r\n}","import {Html} from \"../html.js\";\r\nimport UI from \"../ui.js\";\r\nimport Swal from \"sweetalert2\";\r\nimport Store from '../store.js';\r\nimport allUsers from '../user';\r\n\r\nconst html = new Html;\r\nconst ui = new UI;\r\nconst store = new Store;\r\n\r\nexport function login(userName,userPin){\r\n\r\n    let currentUser = store.getCurrentUser(allUsers,html.inputLoginUsername.value);\r\n\r\n    const loginDetails = \r\n                currentUser?.userPin === userPin &&\r\n                currentUser?.userName == userName;\r\n    \r\n    if (loginDetails) {\r\n      //   Log User Information\r\n      ui.logUserInfo(currentUser);\r\n      // display Logout button after user login\r\n      ui.disPlayLogoutBtn();\r\n      // update UI\r\n      ui.updateUI(currentUser);\r\n\r\n    } else {\r\n      // Sweet Alart here.\r\n      Swal.fire('Warning', 'Wrong Log in details', 'error');\r\n    }\r\n    store.saveAllUsers(allUsers);\r\n    //console.log(allUsers);\r\n    return currentUser;\r\n}","import {Helper} from '../helper/helperfunc';\r\nimport {Html} from '../html';\r\nimport UI from '../ui.js';\r\nimport allUsers,{ currentUser } from '../user';\r\nimport Swal from 'sweetalert2';\r\nimport Store from '../store';\r\n\r\nconst html = new Html;\r\nconst helperFunc = new Helper;\r\nconst ui = new UI;\r\nconst store = new Store;\r\n\r\nexport default function transfer(transferAmount,receiverAcc) {\r\n\r\n    let transactionOTP = helperFunc.generateOTP();\r\n\r\n    //find where receiver accountNo is equal to sender input;\r\n    let receiverDetail = allUsers.map(user => user.acc).flat().find(acc => acc.accNumber === receiverAcc);\r\n    \r\n    console.log(receiverDetail);\r\n\r\n    // check if currentUser have enough money and if the receiver acc exist and if the transferAmount is possitive\r\n    let currentUserAcc = currentUser.acc.find(acc => acc.mov);\r\n\r\n    let transferCondition =\r\n      currentUserAcc.accBalance >= transferAmount &&\r\n      receiverAcc &&\r\n      receiverAcc !== String(currentUserAcc.accNumber) &&\r\n      transferAmount > 0;\r\n\r\n    if (transferCondition && receiverDetail) {\r\n      const total = receiverDetail?.mov.reduce((a, b) => a + b, 0);\r\n\r\n      allUsers.forEach(user => {\r\n\r\n        if (user.userFullName === currentUser.userFullName) {\r\n\r\n          // Check for Maximum balance for each account type\r\n          let maxBalanceCheck =\r\n            (receiverDetail.accType === 'Tier One' &&\r\n              total + transferAmount <= 100000) ||\r\n            (receiverDetail.accType === 'Tier Two' &&\r\n              total + transferAmount <= 1000000) ||\r\n            (receiverDetail.accType === 'Tier Three' &&\r\n              total + transferAmount <= 5000000);\r\n\r\n          if (maxBalanceCheck && transactionOTP) {\r\n\r\n            // Prompt User to Supply OTP\r\n            Swal.fire({\r\n              title: 'supply OTP',\r\n              text: `input this OTP code (${transactionOTP}) to conplete this transaction`,\r\n              icon: 'info',\r\n              input: 'text',\r\n            }).then(fulfiled => {\r\n\r\n              if (fulfiled.isConfirmed && fulfiled.value === transactionOTP) {\r\n\r\n                // Generate time and date and push it to movementsDate\r\n                const dateAndTime = helperFunc.timeStamp();\r\n\r\n                currentUserAcc.movementsDate.push(dateAndTime);\r\n                receiverDetail.movementsDate.push(dateAndTime);\r\n\r\n                // Debit the sender\r\n                currentUserAcc.mov.push(-transferAmount);\r\n                // Credit the Receiver\r\n                receiverDetail.mov.push(transferAmount);\r\n\r\n\r\n                store.saveAllUsers(allUsers);\r\n                console.log(allUsers);\r\n                console.log(currentUserAcc);\r\n                // update UI\r\n                ui.updateUI(currentUser);\r\n                // clearField\r\n                html.inputTransferAmount.value = '';\r\n                html.inputTransferTo.value = '';\r\n                transferAmount.blur;\r\n                // Toast a successful message\r\n                ui.toast('success', 'Transfer Successful');\r\n              } else {\r\n                ui.toast('error', 'Wrong OTP');\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: 'Warning',\r\n              text: 'Maximum amount for the receiver exceeded',\r\n              icon: 'error',\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    } else {\r\n      // Sweet Alert here\r\n      Swal.fire('Warning', 'Wrong Receiver info.', 'error');\r\n    }\r\n}","import {Html} from '../html';\r\n\r\nconst html = new Html;\r\n\r\nexport default function logout() {\r\n    \r\n    html.containerApp.style.opacity = 0;\r\n    html.btnLogOut.classList.add('hidden');\r\n    html.btnLoginOpenModal.classList.remove('hidden');\r\n    html.btnSignupOpenModal.classList.remove('hidden');\r\n\r\n    // reload the page\r\n    location.reload();\r\n}","import {Html} from \"./html.js\";\r\nimport { Helper } from \"./helper/helperfunc.js\";\r\nimport Store from './store';\r\nimport { Maintier, Tier3} from \"./accounts.js\";\r\nimport {register} from './controller/register.js';\r\nimport {login} from './controller/login.js';\r\nimport transfer from \"./controller/transfer.js\";\r\nimport logout from './controller/logout';\r\n\r\nconst html = new Html();\r\nlet store = new Store();\r\nconst helperFunc = new Helper();\r\nlet allUsers = store.getAllUsers();\r\n\r\nlet currentUser;\r\n\r\nexport default allUsers;\r\n\r\nexport class User{\r\n\r\n    constructor(userFullName,userName,userPin,userMobile,userBVN){\r\n\r\n        this.userFullName = userFullName;\r\n        this.userName = userName;\r\n        this.userPin = userPin;\r\n        this.userMobile = userMobile;\r\n        this.userBVN = userBVN;\r\n        this.acc = [];\r\n\r\n        this.register();\r\n        this.userLogin();\r\n        this.makeTransfer();\r\n        this.logOut();\r\n    }\r\n\r\n    register(){\r\n      helperFunc.suggestBVN();\r\n      helperFunc.setAccountType();\r\n  \r\n      html.btnRegister.addEventListener('click', register);\r\n    }\r\n\r\n    createAcc(accNumber,accBalance,movementsDate,accType,accInterest,minAmount,maxAmount,idenType,idenNumber){\r\n      let newAcc;\r\n      newAcc = accType === 'Tier Three' ?\r\n      new Tier3(accNumber,accBalance,movementsDate,accType,accInterest,minAmount,maxAmount,idenType,idenNumber) :\r\n      new Maintier(accNumber,accBalance,movementsDate,accType,accInterest,minAmount,maxAmount);\r\n      // new AccType()\r\n\r\n      this.acc.push(newAcc);\r\n    }\r\n\r\n    userLogin(){\r\n        \r\n      html.btnLogin.addEventListener('click', e=> {\r\n        e.preventDefault();\r\n        currentUser = login(html.inputLoginUsername.value,html.inputLoginPin.value);\r\n      });\r\n    }\r\n\r\n    makeTransfer(){\r\n\r\n      html.btnTransfer.addEventListener('click', e =>{\r\n        \r\n        e.preventDefault();\r\n        transfer(Number(html.inputTransferAmount.value),Number(html.inputTransferTo.value));\r\n        \r\n      });\r\n\r\n    }\r\n\r\n    logOut(){\r\n      html.btnLogOut.addEventListener('click', logout);\r\n    }\r\n\r\n};\r\n\r\nexport {currentUser};"],"names":["a","__esModule","default","$5903dc562b3add6551f0a1426a370e95$export$Html","containerApp","document","querySelector","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","btnLoginOpenModal","btnSignupOpenModal","btnLogOut","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","labelWelcome","labelBVN","labelACC","labelAccType","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","labelDate","loginModal","signupModal","overlay","loginCloseModal","signupCloseModal","btnRegister","fullNameField","mobileField","userNameField","amountField","passwordField","bvnField","accountTypeField","idTypeField","idNumberField","idTypeSpan","idNumberSpan","$52f78723b3b56cf0b16b9e9d238b3554$var$html","$52f78723b3b56cf0b16b9e9d238b3554$export$Helper","constructor","this","calcDate","_calcInterest","intRate","Date","now","Number","toString","split","slice","join","_generateBVN","newDate","_generateAccountNumber","timeStamp","time","date","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","seconds","String","getSeconds","length","checkMinimumAmount","accType","type","minAmount","value","_sweetalert","fire","title","text","icon","suggestBVN","addEventListener","e","target","setAccountType","accountType","style","display","classList","remove","add","setTier3ID","idtype","idNo","clearInputFields","todayDate","textContent","generateOTP","otp","$f4d2d821d26c6a0ace7da2a0487e2ad7$export$default","currentUser","alluser","JSON","parse","localStorage","getItem","saveUser","user","push","setItem","stringify","saveAllUsers","users","getAllUsers","getCurrentUser","allUsers","userName","find","$1248b20985b9a04c6024ca523f5d417a$export$Maintier","accNumber","accBalance","movementsDate","accInterest","maxAmount","super","mov","$1248b20985b9a04c6024ca523f5d417a$export$Tier3","idenType","idenNumber","$e8bee1b3fce95513ed4383bd04e87940$var$html","$e8bee1b3fce95513ed4383bd04e87940$export$Modal","_openModal","_closeModal","showModal","modal","btn","hideModal","$05c2a23b543f9faa544fb5b82b1d36f9$var$store","$05c2a23b543f9faa544fb5b82b1d36f9$var$helperFunc","$05c2a23b543f9faa544fb5b82b1d36f9$var$html","$05c2a23b543f9faa544fb5b82b1d36f9$var$allUsers","$05c2a23b543f9faa544fb5b82b1d36f9$var$modal","$05c2a23b543f9faa544fb5b82b1d36f9$var$accType","$05c2a23b543f9faa544fb5b82b1d36f9$var$accountType","$05c2a23b543f9faa544fb5b82b1d36f9$export$register","userNameExist","preventDefault","bvn","userFullName","userMobile","amount","userPin","required","undefined","map","acc","some","tier1Range","tier2Range","tier3Range","createAcc","then","fulfilled","location","reload","authUser","$7e0548dde96483cb2163b0d5fb6e4724$var$html","$7e0548dde96483cb2163b0d5fb6e4724$var$modal","$7e0548dde96483cb2163b0d5fb6e4724$export$default","disPlayLogoutBtn","logUserInfo","opacity","aza","accT","paddingLeft","blur","appendMovement","sorted","innerHTML","movements","movemenetDate","movRow","sort","d","index","currentDate","createElement","movType","movDate","movValue","appendChild","insertAdjacentElement","balance","move","reduce","cur","calcSumary","accInterests","income","filter","outcome","Math","abs","interest","int","toFixed","updateUI","toast","msg","mixin","position","showConfirmButton","timer","timerProgressBar","didOpen","stopTimer","resumeTimer","$eee9c7ba09c1765da7b9eb3e76f4fa4a$var$html","$eee9c7ba09c1765da7b9eb3e76f4fa4a$var$ui","$eee9c7ba09c1765da7b9eb3e76f4fa4a$var$store","$f112a490c929ad16ed9f34d12fa1e89f$var$html","$f112a490c929ad16ed9f34d12fa1e89f$var$helperFunc","$f112a490c929ad16ed9f34d12fa1e89f$var$ui","$f112a490c929ad16ed9f34d12fa1e89f$var$store","$5295f85bb0affbfad977baed4570a5c8$var$html","$5295f85bb0affbfad977baed4570a5c8$export$default","$0ff1b1532517163b9ccef850946646d4$var$html","$0ff1b1532517163b9ccef850946646d4$var$store","$0ff1b1532517163b9ccef850946646d4$var$helperFunc","$0ff1b1532517163b9ccef850946646d4$export$currentUser","$0ff1b1532517163b9ccef850946646d4$export$default","$0ff1b1532517163b9ccef850946646d4$export$User","userBVN","register","userLogin","makeTransfer","logOut","newAcc","transferAmount","receiverAcc","transactionOTP","receiverDetail","flat","console","log","currentUserAcc","total","b","forEach","input","fulfiled","isConfirmed","dateAndTime"],"version":3,"file":"newScript.js.map"}